/*import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
*/



/*"use client";
import { useEffect } from "react";
import Navbar from "@/components/Navbar";
import "./globals.css";

export default function RootLayout({ children }: { children: React.ReactNode }) {

  useEffect(() => {
    const script = document.createElement("script");
    script.src = "https://checkout.razorpay.com/v1/checkout.js";
    script.async = true;
    document.body.appendChild(script);
  }, []);

  return (
    <html lang="en">
      <body>
        
          <Navbar />
          <main className="container mx-auto p-4">{children}</main>
        
  
      </body>
    </html>
  );
}*/



/*
"use client";
import { useEffect, useState } from "react";
import Navbar from "@/components/Navbar";
import "./globals.css";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const [activeSection, setActiveSection] = useState("home");

  useEffect(() => {
    const script = document.createElement("script");
    script.src = "https://checkout.razorpay.com/v1/checkout.js";
    script.async = true;
    document.body.appendChild(script);
  }, []);

  return (
    <html lang="en">
      <body>
       
        <main className="container mx-auto p-4">{children}</main>
      </body>
    </html>
  );
}
*/


/*"use client";
import { useEffect, useState } from "react";
import Navbar from "@/components/Navbar";
import "./globals.css";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [activeSection, setActiveSection] = useState("home"); // Default section

  useEffect(() => {
    const token = localStorage.getItem("token");
    setIsAuthenticated(!!token);
  }, []);

  const handleLogout = () => {
    localStorage.removeItem("token");
    setIsAuthenticated(false);
  };

  return (
    <html lang="en">
      <body>
        {/* âœ… Pass authentication state & active section handler */
        /*<Navbar
          isAuthenticated={isAuthenticated}
          onLogout={handleLogout}
          onNavigate={setActiveSection}
        />
        <main className="container mx-auto p-4">{children}</main>
      </body>
    </html>
  );
}*/

"use client";
import React, { useEffect, useState, ReactNode } from "react";
import Navbar from "@/components/Navbar";
import "./globals.css";

interface RootLayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: RootLayoutProps) {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [activeSection, setActiveSection] = useState("home");

  useEffect(() => {
    const token = localStorage.getItem("token");
    setIsAuthenticated(!!token);
  }, []);

  const handleLogout = () => {
    localStorage.removeItem("token");
    setIsAuthenticated(false);
  };

  return (
    <html lang="en">
      <body>
        <Navbar
          isAuthenticated={isAuthenticated}
          onLogout={handleLogout}
          onNavigate={setActiveSection}
        />
     



        <main className="container mx-auto p-4">{children}

        </main>
      </body>
    </html>
  );
}
